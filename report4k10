#!/bin/sh
#version 2.3
#usage: ./report4k10 indirizzo@mail.com
email=$1
# Check if the email address is valid
if ! [[ "$email" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
    echo "Error: invalid email. Usage: ./report4k10 indirizzo@mail.com"
    exit 1
fi
#get cluster name
cluster_api_name=$(/usr/local/bin/oc config view --minify -o jsonpath='{.clusters[].name}')
if [[ $cluster_api_name == "apiurl1:6443" || $cluster_api_name == "apiusrl2:6443" ]];
        then type="dr"
    else type="primary"
fi

cluster_name=$(echo $cluster_api_name | cut -d'-' -f2)
cluster_name_capital=$(echo $cluster_name | tr '[:lower:]' '[:upper:]')

#get last report name
report_name=$(/usr/local/bin/oc get reports -n kasten-io --sort-by={metadata.creationTimestamp} | tail -n 1 | awk '/^scheduled/{print $1}')
/usr/local/bin/oc get reports $report_name -n kasten-io -o yaml > /tmp/lastreport.yaml

#create mail bod
/usr/bin/echo -en "Report for $cluster_name_capital type $type date " > /tmp/last.txt
timestamp=$(/usr/local/bin/yq '.spec.reportTimestamp' /tmp/lastreport.yaml)
data=${timestamp:0:-10}
echo $data >> /tmp/last.txt

if [[ $type == "primary" ]]; then
/usr/bin/echo -e "\nStato delle applicazioni su Kasten (piu' dettagli nell'allegato yaml) :\n " >> /tmp/last.txt
/usr/local/bin/yq '.results.compliance' /tmp/lastk10report.yaml >> /tmp/last.txt
elif [[ $type == "dr" ]]; then
/usr/bin/echo -e "\nStato delle importazioni/restore su Kasten:\n " >> /tmp/last.txt
/usr/bin/echo -e "Import: " >> /tmp/last.txt
/usr/local/bin/yq '.results.actions.countStats.import' /tmp/lastreport.yaml >> /tmp/last.txt
/usr/bin/echo -e "\nRestore: " >> /tmp/last.txt
/usr/local/bin/yq '.results.actions.countStats.restore' /tmp/lastreport.yaml >> /tmp/last.txt
fi

#cleaning last.txt
sed -i 's/[^[:print:]]//g' /tmp/last.txt
sed -i "s/\r//g" /tmp/last.txt

#send
/usr/bin/mailx -a /tmp/lastreport.yaml -a /tmp/last.txt -r sender@mail.com -s "Daily report for cluster $cluster_name_capital" "$email" < /tmp/last.txt
